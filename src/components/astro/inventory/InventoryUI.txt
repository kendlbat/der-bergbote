---
import type { ImageMetadata } from "astro";
import InventoryItem from "./InventoryItem.astro";
import { HoverCard } from "@/components/ui/hover-card";
import { HoverCardTrigger } from "@/components/ui/hover-card";
import { HoverCardContent } from "@/components/ui/hover-card";
import Coin from "../Coin.astro";
import { InventoryHover } from "./InventoryHover";
import BergBalance from "../BergBalance.astro";

/*interface Props {
    username: Object
}*/

const items = [
    {
        name: "platinum_monocle_thick",
        displayName: "Platinum Monocle",
        description: "A classy platinum monocle",
        value: 1000,
    },
    {
        name: "platinum_monocle_thick",
        displayName: "Platinum Monocle",
        description: "A classy platinum monocle",
        value: 1000,
    },
    {
        name: "platinum_monocle_thick",
        displayName: "Platinum Monocle",
        description: "A classy platinum monocle",
        value: 1000,
    },
];

const slotTypes = [
    "skincolor",
    "face",
    "eyes",
    "hair",
    "pants",
    "shirt",
    "shoes",
];
---

<div>
    <h1 class="flex flex-row justify-center text-[2em] h-min align-middle">
        Inventory
    </h1>
    <div class="flex flex-wrap gap-3">
        {
            items.map((elmn, idx) => {
                return (
                    <InventoryHover client:visible item={elmn}>
                        <span>
                            <div
                                style={{ border: "3px solid gray" }}
                                class="border rounded-lg p-3 h-min w-min aspect-square"
                            >
                                <InventoryItem
                                    i={elmn.name + "_item"}
                                    typeIco="eyes"
                                    class="rounded m-1 h-20 aspect-square"
                                />
                            </div>
                        </span>
                        <span slot="coin">
                            <BergBalance
                                amount={elmn.value}
                                class="text-[0.5em]"
                            />
                        </span>
                    </InventoryHover>
                );
            })
        }
    </div>
    <h1 class="flex flex-row justify-center text-[2em] h-min align-middle">
        Equipped Items
    </h1>
    <div class="flex flex-wrap gap-3">
        {
            slotTypes.map((slotIdx, idx) => {
                return (
                    <div
                        style={{ border: "3px solid gray" }}
                        class="border rounded-lg p-3 h-min w-min aspect-square"
                    >
                        <InventoryItem
                            i={"empty"}
                            typeIco={slotIdx}
                            class="rounded m-1 h-20 aspect-square"
                        />
                    </div>
                );
            })
        }
    </div>
</div>
