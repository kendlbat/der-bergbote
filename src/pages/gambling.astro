---
import AppSkeleton from "@/components/astro/AppSkeleton.astro";
import BergBalance from "@/components/astro/BergBalance.astro";
import ChestImage from "@/components/astro/ChestImage.astro";
import Coin from "@/components/astro/Coin.astro";
import { RarityTag } from "@/components/react/rarity-tag";
import { chests } from "@/gambling/chests";
import { items } from "@/gambling/items";
import Layout from "@/layouts/Layout.astro";
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);

const user = session?.user?.email;
if (!user)
    return new Response(null, {
        headers: {
            location: "/",
        },
        status: 302,
    });

const chestSelection = parseInt(Astro.url.searchParams.get("c") || "0");
const prev =
    chestSelection == 0 ? Object.keys(chests).length - 1 : chestSelection - 1;
const next =
    chestSelection == Object.keys(chests).length - 1 ? 0 : chestSelection + 1;

const id = chestSelection;
const chest = chests[chestSelection];
---

<Layout title="Bergbote - Gambling">
    <AppSkeleton>
        <div class="overflow-hidden relative h-full" id="swipe-detector">
            <BergBalance />
            <div
                class="p-2 absolute left-1/2 -translate-x-1/2 grid grid-cols-4 sm:grid-cols-6 gap-2 w-full"
            >
                <a
                    href={`/gambling?c=${prev}`}
                    class="hidden text-center sm:flex"
                    id="chest-prev"
                    data-astro-prefetch="load"
                    ><span class="m-auto text-[3em]">&lt;</span></a
                >
                <a
                    href={`/gambling/chest/${id}`}
                    id="chest-curr"
                    class="inline-block col-span-6 sm:col-span-4 bg-background z-[1] -mt-3"
                >
                    <div
                        class="border rounded-lg p-4 flex flex-row-reverse justify-between gap-3"
                    >
                        <div class="h-[9em] aspect-square float-right">
                            <ChestImage i={chest.resourceName} />
                        </div>
                        <div>
                            <h2 class="text-[2em] leading-6">
                                {chest.name}
                            </h2>
                            <span
                                class="self-center text-[0.7em] -mt-1 inline-block"
                            >
                                <BergBalance amount={chest.cost} />
                            </span>
                            <p class="leading-5 mb-2">{chest.description}</p>
                            <div class="leading-5">
                                <h3>Kann folgendes enthalten:</h3>
                                <table>
                                    <tr>
                                        <th>Chance</th>
                                        <th>Item</th>
                                        <th>Rarity</th>
                                    </tr>
                                    {
                                        Object.entries(chest.lootTable)
                                            .sort((a, b) => a[1] - b[1])
                                            .map(([item, chance]) => (
                                                <tr class="pl-3">
                                                    <td>
                                                        {Math.round(
                                                            chance * 100
                                                        ) + "%"}
                                                    </td>
                                                    <td>{items[item].name}</td>
                                                    <td>
                                                        <RarityTag
                                                            rarity={
                                                                items[item]
                                                                    .Rarity
                                                            }
                                                        />
                                                    </td>
                                                </tr>
                                            ))
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                    <a
                        href={`/gambling?c=${next}`}
                        class="hidden text-center sm:flex"
                        id="chest-next"
                        data-astro-prefetch="load"
                    >
                        <span class="m-auto text-[3em]">&gt;</span>
                    </a>
                </a>
                <p
                    class="absolute bottom-0 left-1/2 -translate-x-1/2 sm:hidden text-nowrap pb-1"
                >
                    Wischen, um andere Truhen auszuw√§hlen
                </p>
            </div>
        </div>

        <script
            is:inline
            define:vars={{
                c: chestSelection,
                next,
                prev,
            }}
        >
            let touchstartX = 0;
            let touchendX = 0;

            function whichDirection() {
                if (touchendX < touchstartX)
                    document.querySelector("#chest-next").click();
                if (touchendX > touchstartX)
                    document.querySelector("#chest-prev").click();
            }

            const listener = () => {
                document
                    .querySelector("#swipe-detector")
                    .addEventListener("touchstart", (evt) => {
                        touchstartX = evt.changedTouches[0].screenX;
                    });

                document
                    .querySelector("#swipe-detector")
                    .addEventListener("touchmove", (evt) => {
                        const delta =
                            evt.changedTouches[0].screenX - touchstartX;
                        document.querySelector("#chest-curr").style.marginLeft =
                            `${delta}px`;
                        document.querySelector(
                            "#chest-curr"
                        ).style.marginRight = `${delta * -1}px`;
                        document.querySelector("#chest-curr").style.rotate =
                            `${delta / 20000}turn`;
                    });

                document
                    .querySelector("#swipe-detector")
                    .addEventListener("touchend", (evt) => {
                        touchendX = evt.changedTouches[0].screenX;
                        whichDirection();
                    });

                document.removeEventListener("astro:page-load", listener);
            };

            document.addEventListener("astro:page-load", listener);
        </script>
    </AppSkeleton></Layout
>
